{"version":3,"sources":["apis/streams.js","history.js","actions/types.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","console","log","load","ref","sidth","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","authReducer","action","streamReducer","mapKeys","omit","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.06dc8446.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://streams--api.herokuapp.com/\",\n});\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const CREATE_STREAM = \"CREATE_STREAM\";\nexport const FETCH_STREAMS = \"FETCH_STREAMS\";\nexport const FETCH_STREAM = \"FETCH_STREAM\";\nexport const DELETE_STREAM = \"DELETE_STREAM\";\nexport const EDIT_STREAM = \"EDIT_STREAM\";\n","import streams from \"../apis/streams\";\nimport history from \"../history\";\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  DELETE_STREAM,\n  EDIT_STREAM,\n} from \"./types\";\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues, userId });\n\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data,\n  });\n  history.push(\"/\");\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get(\"/streams\");\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/streams/${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push(\"/\");\n};\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form error\"\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamForm\",\n  validate,\n})(StreamForm);\n","// import React from \"react\";\n// import { Field, reduxForm } from \"redux-form\";\n// import { connect } from \"react-redux\";\n// import { createStream } from \"../../actions\";\n\n// class StreamCreate extends React.Component {\n//   // all valid examples of using renderInput()\n\n//   // renderInput(formProps) {\n//   //   return (\n//   //     <input\n//   //       onChange={formProps.input.onChange}\n//   //       value={formProps.input.value}\n//   //     />\n//   //   );\n//   // }\n\n//   // renderInput(ahh) {\n//   //   console.log(ahh);\n//   //   return <input {...ahh.input} />;\n//   // }\n\n//   renderError = ({ error, touched }) => {\n//     if (touched && error) {\n//       console.log(\"touched\", touched, \" error\", error);\n//       return (\n//         <div className=\"ui error message\">\n//           <div className=\"header\">{error}</div>\n//         </div>\n//       );\n//     }\n//   };\n\n//   renderInput = ({ input, label, meta }) => {\n//     const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n//     return (\n//       <div className={className}>\n//         <label>{label}</label>\n//         <input {...input} />\n//         {this.renderError(meta)}\n//       </div>\n//     );\n//   };\n\n//   onSubmit = (formValues) => {\n//     this.props.createStream(formValues);\n//   };\n\n//   render() {\n//     return (\n//       <form\n//         className=\"ui form error\"\n//         onSubmit={this.props.handleSubmit(this.onSubmit)}\n//       >\n//         <Field\n//           name=\"title\"\n//           component={this.renderInput}\n//           label=\"Enter a Title\"\n//         />\n//         <Field\n//           name=\"description\"\n//           component={this.renderInput}\n//           label=\"Description\"\n//         />\n//         <button className=\"ui button primary\">Submit</button>\n//       </form>\n//     );\n//   }\n// }\n\n// const validate = (formValues) => {\n//   const errors = {};\n//   if (!formValues.title) {\n//     errors.title = \"You must enter a title\";\n//   }\n\n//   if (!formValues.description) {\n//     errors.description = \"You must enter a description\";\n//   }\n//   return errors;\n// };\n\n// const formWrapped = reduxForm({\n//   form: \"streamCreate\",\n//   validate,\n// })(StreamCreate);\n\n// export default connect(null, { createStream })(formWrapped);\n\n/////////////////////////////////////////////////\n// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { createStream } from \"../../actions\";\n// import StreamForm from \"./StreamForm\";\n\n// class StreamCreate extends React.Component {\n//   onSubmit = (formValues) => {\n//     this.props.createStream(formValues);\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <h3>Create a Stream</h3>\n//         <StreamForm onSubmit={this.onSubmit} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default connect(null, { createStream })(StreamCreate);\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamCreate extends React.Component {\n  onSubmit = (formValues) => {\n    this.props.createStream(formValues);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Create a Stream</h3>\n        <StreamForm onSubmit={this.onSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { createStream })(StreamCreate);\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) => {\n    this.props.editStream(this.props.match.params.id, formValues);\n  };\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id],\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div onClick={props.onDismiss} className=\" ui dimmer modals visible active\">\n      <div\n        onClick={(e) => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\">{props.title}</div>\n        <div className=\"content\">{props.content}</div>\n        <div className=\"actions\">{props.actions} </div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import history from \"../../history\";\n// import Modal from \"../Modal\";\n// import { fetchStream, deleteStream } from \"../../actions\";\n// class StreamDelete extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStream(this.props.match.params.id);\n//   }\n\n//   renderActions() {\n//     const id = this.props.match.params.id;\n//     return (\n//       <>\n//         <button\n//           onClick={() => this.props.deleteStream(id)}\n//           className=\"ui button negative\"\n//         >\n//           Delete\n//         </button>\n//         <Link to=\"/\" className=\"ui button\">\n//           Cancel\n//         </Link>\n//       </>\n//     );\n//   }\n\n//   renderContent() {\n//     if (!this.props.stream) {\n//       return \"Are you sure you want to delete this stream?\";\n//     }\n//     return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n//   }\n\n//   render() {\n//     return (\n//       <Modal\n//         title=\"delete Stream\"\n//         content={this.renderContent()}\n//         actions={this.renderActions()}\n//         onDismiss={() => history.push(\"/\")}\n//       />\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n//   return { stream: state.streams[ownProps.match.params.id] };\n// };\n\n// export default connect(mapStateToProps, { fetchStream, deleteStream })(\n//   StreamDelete\n// );\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../Modal\";\nimport history from \"../../history\";\nimport { fetchStream, deleteStream } from \"../../actions\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const { id } = this.props.match.params;\n\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.props.deleteStream(id)}\n          className=\"ui button negative\"\n        >\n          Delete\n        </button>\n        <Link to=\"/\" className=\"ui button\">\n          Cancel\n        </Link>\n      </React.Fragment>\n    );\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream?\";\n    }\n\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={() => history.push(\"/\")}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\n  StreamDelete\n);\n","// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import { fetchStreams } from \"../../actions\";\n\n// class StreamList extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchStreams();\n//   }\n\n//   renderAdmin(stream) {\n//     if (stream.userId === this.props.currentUserId) {\n//       return (\n//         <div className=\"right floated content\">\n//           <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n//             Edit\n//           </Link>\n//           <Link\n//             to={`/streams/delete/${stream.id}`}\n//             className=\"ui button negative\"\n//           >\n//             Delete\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n\n//   renderList() {\n//     return this.props.streams.map((stream) => {\n//       return (\n//         <div className=\"item\" key={stream.id}>\n//           {this.renderAdmin(stream)}\n//           <i className=\"large middle aligned icon camera\" />\n//           <div className=\"content\">\n//             {stream.title}\n//             <div className=\"description\">{stream.description}</div>\n//           </div>\n//         </div>\n//       );\n//     });\n//   }\n\n//   renderCreate() {\n//     if (this.props.isSignedIn) {\n//       return (\n//         <div style={{ textAlign: \"right\" }}>\n//           <Link to=\"/streams/new\" className=\"ui button primary\">\n//             Create Stream\n//           </Link>\n//         </div>\n//       );\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h2>Streams</h2>\n//         <div className=\"ui celled list\">{this.renderList()}</div>\n//         {this.renderCreate()}\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     streams: Object.values(state.streams),\n//     currentUserId: state.auth.userId,\n//     isSignedIn: state.auth.isSignedIn,\n//   };\n// };\n\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link to={`/streams/${stream.id}`} className=\"header\">\n              {stream.title}\n            </Link>\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"right\" }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n","import React from \"react\";\nimport flv from \"flv.js\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    this.props.fetchStream(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  componentWillUnmount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n    const { id } = this.props.match.params;\n\n    this.player = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}.flv`,\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    console.log(this.videoRef);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return <div>loading</div>;\n    }\n    const { title, description } = this.props.stream;\n    return (\n      <div>\n        <video ref={this.videoRef} style={{ sidth: \"100%\" }} controls />\n        <h1>{title}</h1>\n        <h5> {description}</h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { signIn, signOut } from \"../actions\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"524615515241-gjg2lhnb4sbii4hqg2un78prfsjt9682.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign in with Google\n        </button>\n      );\n    }\n  }\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport GoogleAuth from './GoogleAuth'\n\nconst Header = () => {\n  return (\n  <div className=\" ui secondary pointing menu\">\n    <Link to=\"/\" className=\"item\">\n      Streamer\n    </Link>\n    <div className='right menu'>\n    <Link to='/' className=\"item\">\n      All Streams\n    </Link>\n    <GoogleAuth/>\n    </div>\n  </div>\n  )\n}\n\nexport default Header;","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport StreamCreate from \"./streams/StreamCreate\";\nimport StreamEdit from \"./streams/StreamEdit\";\nimport StreamDelete from \"./streams/StreamDelete\";\nimport StreamList from \"./streams/StreamList\";\nimport StreamShow from \"./streams/StreamShow\";\nimport Header from \"./Header\";\nimport history from \"../history\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <div>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={StreamList} />\n            <Route path=\"/streams/new\" exact component={StreamCreate} />\n            <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\n            <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\n            <Route path=\"/streams/:id\" exact component={StreamShow} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { SIGN_IN, SIGN_OUT } from \"./../actions/types\";\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import _ from \"lodash\";\nimport {\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  CREATE_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM,\n} from \"./../actions/types\";\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default streamReducer;\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport authReducer from \"./authReducer\";\nimport streamReducer from \"./streamReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  streams: streamReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}